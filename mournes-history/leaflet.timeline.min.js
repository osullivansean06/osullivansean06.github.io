
/*! Leaflet.timeline 1.2.1 by skeletoid | https://github.com/skeate/Leaflet.timeline */
L.timeline = function(geojson, options) {
    const layerGroup = L.layerGroup();
    const features = geojson.features || [];
    features.forEach(f => {
        const coords = f.geometry.coordinates;
        const latlng = L.latLng(coords[1], coords[0]);
        const marker = options.pointToLayer(f, latlng);
        layerGroup.addLayer(marker);
    });
    return layerGroup;
};

L.timelineSliderControl = function(options) {
    this.options = options || {};
    this._map = null;
    this._timelines = [];
    this._currentTime = null;
};

L.timelineSliderControl.prototype.addTimelines = function(timelines) {
    this._timelines.push(timelines);
};

L.timelineSliderControl.prototype.addTo = function(map) {
    this._map = map;
    map.addLayer(this);
};

L.timelineSliderControl.prototype.onAdd = function(map) {
    const container = L.DomUtil.create('div', 'leaflet-timeline-control');
    container.innerHTML = '<input type="range" min="0" max="100" value="0" step="1" />';
    container.querySelector('input').addEventListener('input', (event) => {
        const value = event.target.value;
        this._timelines.forEach(timeline => {
            const date = new Date(new Date().setFullYear(1975 + (value / 100) * 45));
            timeline.eachLayer(layer => {
                const startDate = new Date(layer.feature.properties.date);
                if (startDate <= date) {
                    layer.setStyle({ opacity: 1 });
                } else {
                    layer.setStyle({ opacity: 0.1 });
                }
            });
        });
    });
    return container;
};
